@using WebApplication.Models;
@model Tweet

@using (Html.BeginForm())
{
    TweetUser user = ViewBag.TweetUser as TweetUser;
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Edit tweet</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Created)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.TweetUserId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                @Html.TweetDescription("This defines name of tweet.")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Text, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                @Html.TweetDescription("This defines text of tweet (200 chars max).")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                @Html.TweetDescription("This defines position in list.")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TweetChannel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TweetChannelId, new SelectList(user.TweetChannels, "Id", "Name"), "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TweetChannelId, "", new { @class = "text-danger" })
                @Html.TweetDescription("This defines channel, tweet belongs to.")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Enabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Enabled, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enabled, "", new { @class = "text-danger" })
                @Html.TweetDescription("This defines visibility for others.")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
   @Html.ActionLink("To Dashboard", "Index", "TweetDashboard", null, new { @class = "btn btn-default" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
